name: "Gerar Versão Semântica"
description: "Gera uma versão (MAJOR.MINOR.PATCH) com base no histórico de commits."
outputs:
  version:
    description: "A nova versão gerada."
    value: ${{ steps.semver.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Executar script de versionamento
      id: semver
      shell: bash
      run: |
        LATEST_TAG=$(git describe --tags --match "v*" --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "Tag mais recente encontrada: $LATEST_TAG"

        if [ "$LATEST_TAG" == "v0.0.0" ]; then
          NEW_VERSION="0.0.1"
        else
          COMMITS_TO_CHECK="$LATEST_TAG..HEAD"

          VERSION=${LATEST_TAG#v}
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)

          BUG_FIX_COMMIT=$(git log $COMMITS_TO_CHECK --oneline --grep="^fix")
          NEW_FEATURE_COMMIT=$(git log $COMMITS_TO_CHECK --oneline --grep="^feat")
          BREAKING_CHANGE_COMMIT=$(git log $COMMITS_TO_CHECK --oneline --grep="^BREAKING CHANGE")
        

          if [ ! -z "$BREAKING_CHANGE_COMMIT" ]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [ ! -z "$NEW_FEATURE_COMMIT" ]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [ ! -z "$BUG_FIX_COMMIT" ]; then
            PATCH=$((PATCH + 1))
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        fi

        echo "::set-output name=version::$NEW_VERSION"